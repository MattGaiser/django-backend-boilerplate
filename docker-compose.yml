services:
  db:
    image: postgres:16-alpine
    environment:
      # Use postgres as the default superuser instead of POSTGRES_USER
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ${POSTGRES_DB}
    env_file:
      - .env.dev
    volumes:
      - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres && psql -U postgres -d postgres -c \"SELECT 1 FROM pg_database WHERE datname='postgres_prefect'\" | grep -q 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  django:
    build: .
    environment:
      - DJANGO_ENV=${DJANGO_ENV}
      - DEBUG=${DEBUG}
      - SECRET_KEY=${SECRET_KEY}
      - USE_POSTGRES=true
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - PREFECT_API_URL=http://prefect-server:4200/api
    env_file:
      - .env.dev
    depends_on:
      db:
        condition: service_healthy
      prefect-server:
        condition: service_healthy
    volumes:
      - .:/app
    command: >
      sh -c "python manage.py migrate &&
             python manage.py seed_demo_data &&
             python manage.py runserver 0.0.0.0:8000"

  prefect-server:
    image: prefecthq/prefect:3-latest
    env_file:
      - .env.dev
    environment:
      PREFECT_SERVER_API_HOST: 0.0.0.0
      PREFECT_SERVER_API_PORT: 4200
      PREFECT_API_DATABASE_CONNECTION_URL: ${PREFECT_API_DATABASE_CONNECTION_URL}
    ports:
      - "4200:4200"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - prefect_data:/opt/prefect
    command: prefect server start --host 0.0.0.0
    healthcheck:
      test: ["CMD-SHELL", "python -c \"import urllib.request; urllib.request.urlopen('http://localhost:4200/api/health')\""]
      interval: 30s
      timeout: 30s
      retries: 10
      start_period: 120s

  prefect-agent:
    image: prefecthq/prefect:3-latest
    environment:
      PREFECT_API_URL: http://prefect-server:4200/api
    env_file:
      - .env.dev
    depends_on:
      prefect-server:
        condition: service_healthy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - .:/app
    command: >
      sh -c "pip install prefect-docker &&
             sleep 60 && 
             prefect work-pool create --type docker default-pool || true &&
             prefect worker start --pool default-pool"

volumes:
  prefect_data:

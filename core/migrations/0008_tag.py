# Generated by Django 5.2.4 on 2025-08-02 20:07

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
        ("core", "0007_organization_plan_alter_organization_language_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Unique identifier for this record",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Timestamp when this record was created",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Timestamp when this record was last updated",
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="Timestamp when this record was soft deleted",
                        null=True,
                    ),
                ),
                ("name", models.CharField(help_text="Name of the tag", max_length=100)),
                ("object_id", models.UUIDField(help_text="UUID of the tagged object")),
                (
                    "content_type",
                    models.ForeignKey(
                        help_text="Content type of the tagged object",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who created this record",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        help_text="Organization this tag belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tags",
                        to="core.organization",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who last updated this record",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Tag",
                "verbose_name_plural": "Tags",
                "indexes": [
                    models.Index(
                        fields=["organization", "name"],
                        name="core_tag_organiz_9fed11_idx",
                    ),
                    models.Index(
                        fields=["content_type", "object_id"],
                        name="core_tag_content_d03c4c_idx",
                    ),
                    models.Index(
                        fields=["organization", "content_type"],
                        name="core_tag_organiz_87ac03_idx",
                    ),
                ],
                "constraints": [
                    models.UniqueConstraint(
                        fields=("organization", "name", "content_type", "object_id"),
                        name="unique_tag_per_object",
                    )
                ],
            },
        ),
    ]
